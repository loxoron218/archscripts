## This installation script sets up various services for a home server using Docker Compose (Homarr, Immich, Nextcloud, Vaultwarden, Jellyfin, Jackett, Radarr, Sabnzbd and Nginx Proxy Manager)
## Ensure that this file is placed in the same folder as the .env and other .yml files for Immich to work correctly.
services:
  homarr:
    image: ghcr.io/ajnart/homarr:latest
    container_name: homarr
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration
      - ~/homarr/configs:/app/data/configs
      - ~/homarr/icons:/app/public/icons
      - ~/homarr/data:/data
    ports:
      - '7575:7575'
    restart: unless-stopped
---
services:      
  immich-server:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}  
    container_name: immich_server
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    ports:
      - '2283:2283' 
    restart: unless-stopped 
    extends:
      file: hwaccel.transcoding.yml
      service: quicksync # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    env_file:
      - .env
    depends_on:
      - redis
      - database
---
services:
  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}-openvino
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    volumes:
      - model-cache:/cache
    restart: unless-stopped
    extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
      file: hwaccel.ml.yml
      service: openvino # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    env_file:
      - .env
---
services:
  redis:
    image: docker.io/redis:6.2-alpine@sha256:eaba718fecd1196d88533de7ba49bf903ad33664a92debb24660a922ecd9cac8
    container_name: immich_redis
    restart: unless-stopped
---
services:
  database:
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    container_name: immich_postgres
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    restart: unless-stopped
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on
volumes:
  model-cache:
---
services: 
  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - AUTO_UPDATE=true #optional
      - RUN_OPTS= #optional
    volumes:
      - ~/docker-compose/jackett/data:/config
      - ~/docker-compose/blackhole:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped
---
services:
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:nightly
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - JELLYFIN_PublishedServerUrl=http://192.168.0.5 #optional
    volumes:
      - ~/docker-compose/jellyfin/library:/config
      - ~/docker-compose/tvseries:/data/tvshows
      - ~/docker-compose/movies:/data/movies
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    restart: unless-stopped
---
services:    
  nextcloud:
    image: lscr.io/linuxserver/nextcloud:develop
    container_name: nextcloud
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ~/docker-compose/nextcloud/config:/config
      - ~/docker-compose/data:/data
    ports:
      - 443:443
    restart: unless-stopped
---
services:
  app:
    image: 'docker.io/jc21/nginx-proxy-manager:latest'
    volumes:
      - data:/data
      - ~/letsencrypt:/etc/letsencrypt
    ports:
      - '90:90'
      - '81:81'
      - '403:403'
    restart: unless-stopped
---
services:    
  radarr:
    image: lscr.io/linuxserver/radarr:nightly
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ~/docker-compose/radarr/data:/config
      - ~/docker-compose/movies:/movies #optional
      - ~/docker-compose/download-client-downloads:/downloads #optional
    ports:
      - 7878:7878
    restart: unless-stopped
---
services:    
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:nightly
    container_name: sabnzbd
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ~/docker-compose/sabnzbd/config:/config
      - ~/docker-compose/downloads:/downloads #optional
      - ~/docker-compose/incomplete/downloads:/incomplete-downloads #optional
    ports:
      - 8080:8080
    restart: unless-stopped
---
services:    
  vaultwarden:
    image: vaultwarden/server:testing
    container_name: vaultwarden
    volumes:
      - ~/vw-data/:/data/
    ports:
      - 80:80
    restart: unless-stopped
